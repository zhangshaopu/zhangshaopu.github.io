<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>pupupu</title>
        <link>https://zhangshaopu.github.io/</link>
        <description>zsp个人博客。</description>
        <generator>Hugo 0.64.1 https://gohugo.io/</generator>
        
            <language>zh-CN</language>
        
        
            <managingEditor>99432741@qq.com (zsp)</managingEditor>
        
        
            <webMaster>99432741@qq.com (zsp)</webMaster>
        
        
        <lastBuildDate>Sun, 23 Feb 2020 17:51:29 +0800</lastBuildDate>
        
            <atom:link rel="self" type="application/rss+xml" href="https://zhangshaopu.github.io/rss.xml" />
        
        
            <item>
                <title>关于可导，可微，连续的思考</title>
                <link>https://zhangshaopu.github.io/posts/%E5%85%B3%E4%BA%8E%E5%8F%AF%E5%AF%BC%E5%8F%AF%E5%BE%AE%E8%BF%9E%E7%BB%AD%E7%9A%84%E6%80%9D%E8%80%83/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/%E5%85%B3%E4%BA%8E%E5%8F%AF%E5%AF%BC%E5%8F%AF%E5%BE%AE%E8%BF%9E%E7%BB%AD%E7%9A%84%E6%80%9D%E8%80%83/</guid>
                <pubDate>Sat, 22 Feb 2020 00:22:59 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h2 id="关于可导可微连续的思考">关于可导，可微连续的思考：</h2>
<h3 id="函数不连续则一定不可导">函数不连续则一定不可导：</h3>
<p>根据可导的定义：<img src="https://www.zhihu.com/equation?tex=%5Clim_%7Bx+%5Crightarrow+x_%7B0%7D%7D%7B%5Cfrac%7B%7Bf%28x%29-f%28x_%7B0%7D%29%7D%7D%7Bx-x_%7B0%7D%7D%7D" alt="[公式]">，若可导则极限一定存在。为什么呢，因为x-&gt;x0，表示x取不到x0，所以肯定是不会出现0/0型的情况。 再说为什么函数不连续一定不可导，因为假如f(x)在x=x0处不连续，即是间断点，（），f(x0)这个值取不到，因此导数定义这个极限就不存在了，即是不可导。</p>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/study/">study</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/math/">math</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/math/">math</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>数值分析</title>
                <link>https://zhangshaopu.github.io/posts/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/</guid>
                <pubDate>Thu, 20 Feb 2020 16:08:19 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h2 id="绝对误差与绝对误差限">绝对误差与绝对误差限</h2>
<blockquote>
<p>绝对误差:e=x-x<sup><em></sup>
相对误差限：e=(x-x<sup></em></sup>) $\leq$  $\varepsilon$</p>
</blockquote>
<ul>
<li>notes: x:为近似值 x<sup>*</sup>:准确值</li>
</ul>
<h2 id="相对误差与相对误差限">相对误差与相对误差限</h2>
<blockquote>
<p>相对误差： e<sub>r</sub>=e/x<sup><em></sup><br>
相对误差限：e<sub>r</sub>=e/x<sup></em></sup>  $\leq$ $\varepsilon$<sub>r</sub></p>
</blockquote>
<h2 id="有效数字与绝对误差限相对误差限的关系">有效数字与绝对误差限/相对误差限的关系</h2>
<ol>
<li>m是标准浮点数中 *10的幂级数</li>
<li>n是有效数字位数</li>
<li>1/2*10<sup>m-n</sup>中有小数位越多，误差越小。</li>
</ol>
<h2 id="有效数字定义">有效数字定义：</h2>
<p>如果近似数的绝对误差不超过它某位数字的半个单位，那么从左到右，第一个不为零的数字起，到这位数字止，每一位数字都称为有效数字。用四舍五入法截得的近似数，其各位数字都是有效数字。表示同一个量的近似数，其有效数字越多，精确程度就越高。</p>
]]></description>
                
                
                
                
                
                    
                        
                    
                        
                    
                
            </item>
        
            <item>
                <title>Speechrecognition</title>
                <link>https://zhangshaopu.github.io/posts/speechrecognition/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/speechrecognition/</guid>
                <pubDate>Thu, 20 Feb 2020 15:12:09 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h2 id="几个函数">几个函数：</h2>
<ol>
<li>Ipython.display</li>
</ol>
<blockquote>
<p>创建一个音频对象。
当此对象由输入单元格返回或传递给显示功能时，它将导致音频控件显示在前端（仅在笔记本电脑上有效）。
parameters</p>
</blockquote>
<ul>
<li>data</li>
<li>url</li>
<li>filename</li>
<li>...</li>
</ul>
<ol start="2">
<li>
<p>librosa</p>
<blockquote>
<p>一个对音频处理的包
display()</p>
<ul>
<li>y,sr=librosa.load(filename)
Returns:
y:np.ndarray [shape=(n,) or (2, n)]
audio time series</li>
</ul>
</blockquote>
<pre><code> sr:number &gt; 0 [scalar]
 sampling rate of y
</code></pre>
<ul>
<li>mfcc1 = librosa.feature.mfcc(y,sr)</li>
<li>librosa.display.specshow(mfcc1)</li>
</ul>
</li>
<li>
<p>speech_recognition</p>
<blockquote>
<p>用于执行语音识别的库，支持在线和离线的多个引擎和API。</p>
<ul>
<li>record()函数：将整个文件数据读入audiodata实例。</li>
</ul>
</blockquote>
</li>
<li>
<p>dtw</p>
<blockquote>
</blockquote>
</li>
</ol>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/learnmachine/">learnmachine</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/speechrecognition/">speechrecognition</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/speechrecognition/">speechrecognition</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>导数</title>
                <link>https://zhangshaopu.github.io/posts/%E5%AF%BC%E6%95%B0/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/%E5%AF%BC%E6%95%B0/</guid>
                <pubDate>Wed, 19 Feb 2020 18:22:59 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h2 id="复合函数求导方法">复合函数求导方法</h2>
<ol>
<li>一层一层拨开函数，按照基本初等函数的求导公式，若是几个初等函数嵌套且没有加减乘除^，则直接使用链式法则。</li>
<li>若有加减乘除<a href="%E6%98%AF%E4%B8%A4%E4%B8%AA%E5%87%BD%E6%95%B0u(x),v(x)%E7%9A%84%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4%E3%80%82">^</a>，则根据四则求导法则，再使用链式法则。</li>
</ol>
<h2 id="微积分中d的含义">微积分中d的含义</h2>
<ol>
<li>增量的概念：
Δx = x2 - x1，Δy = y2 - y1
这里的Δ就是增量的意思，只要是后面的量减前面的量，无论正负都叫增量。</li>
<li>无限小的概念：
当一个变量x，越来越趋向于一个数值a时，这个趋向的过程无止境的进行，x与a的差值无限趋向于0，我们就说a是x的极限。
这个差值，我们称它为“无穷小”，它是一个越来越小的过程，一个无限趋
向于0的过程，它不是一个很小的数，而是一个趋向于0的过程。</li>
<li>Δ一方面表示增量的概念，如果x1与x2差距很小，这个小是有限的小。只要写得出来，无论多少位小数点，只要你写得出，只要你的笔一停，都是有限的小。
当x1与x2的差距在无止境的减小，无止境的靠近，在靠近的过程中，x1与x2的差距无止境的趋近于0。这时我们写成dx，也就是说，Δx是有限小的量，dx是无限小的量。</li>
<li>d的来源，本来是 difference = 差距。当此差距无止境的趋向于0时，演变为 differentiation, 就变成了无限小的意思，称为“微分”。
“微分”是一个过程，是无止境的“分割”，无止境的“区分”的过程。</li>
</ol>
<ul>
<li>综上：d表示“微分”。“微分”是一个过程，在无止境“differentials”
dx是微分符号，通常把自变量 x 的增量 Δx 称为自变量的微分，比如d(5x+11) = 5dx，5x+11可以写成y，即dy。</li>
</ul>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/study/">study</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/math/">math</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/math/">math</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>递归和dfs</title>
                <link>https://zhangshaopu.github.io/posts/2019%E8%93%9D%E6%A1%A5%E6%9D%AF/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/2019%E8%93%9D%E6%A1%A5%E6%9D%AF/</guid>
                <pubDate>Tue, 18 Feb 2020 23:28:42 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h2 id="递归">递归：</h2>
<h3 id="切一刀的思想">切一刀的思想：</h3>
<ol>
<li>找重复。</li>
<li>找变化：变化的量应该作为参数（例如在阶乘的递归算法中，n作为参数传入到递归函数。）</li>
<li>找边界：出口</li>
<li>脑子里面时刻要有一副没有分叉的二叉树。</li>
</ol>
<h3 id="递归公式的思想">递归公式的思想：</h3>
<h3 id="dfs深搜状态先纵后横">dfs深搜：（状态）先纵后横</h3>
<ol>
<li>
<p>数独： dfs（）是典型的深搜代码框架。</p>
</li>
<li>
<p>脑子里面时刻要有一副二叉树的图像，先往深处搜索（即转移到下一个状态），遇到不满足条件了，返回上一个状态（即回溯），随即进入平行状态。（即二叉树的兄弟结点）</p>
</li>
<li>
<p>dfs（）的参数用于表明状态。在数独里面就是x，y。用于表明table(x,y)。</p>
</li>
<li>
<p>dfs（）函数编写思路：</p>
<ul>
<li>如果满足需要处理的条件，对这个位置进行操作。
<ol>
<li>先用check()判断 输入能否某值，如果能则赋值，进行下一个位置深搜；不能就试下一个；</li>
<li>回溯：返回上一个状态；在上一个状态进入平行状态。</li>
</ol>
</li>
<li>否则，继续找下一个需要处理的位置。eg:比如在数独里，开始位置就是（0，0），倘若这个空已经填写了，则继续找下一个需要填写的空进行深搜。</li>
</ul>
</li>
<li>
<p>java Scanner 输入问题：</p>
<blockquote>
<p><strong>nextInt()</strong>: it only reads the int value, nextInt() places the cursor in the same line after reading the input.将空格看作是两个输入的数据的间隔， nextInt()只读取数值，剩下&quot;\n&quot;还没有读取，并将cursor放在本行中。</p>
</blockquote>
<blockquote>
<p><strong>next():</strong> read the input only till the space. It can't read two words separated by space. Also, next() places the cursor in the same line after reading the input.</p>
</blockquote>
<blockquote>
<p><strong>nextLine():</strong> reads input including space between the words (that is, it reads till the end of line \n). Once the input is read, nextLine() positions the cursor in the next line.读取内容并自动换行,不将空格看做是两个字符串的间隔，而是看作字符串的一部分，返回时，它作为String类型一并返回.</p>
</blockquote>
</li>
<li>
<p>char 和 int类型的转换：</p>
<pre><code> table[i][j]=line.charAt(j)-'0';
</code></pre>
</li>
<li>
<p>注意状态回溯要写在进入平行状态dfs之前。</p>
</li>
</ol>
<h3 id="例题1数独">例题1：数独</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">train</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="cm">/**
</span><span class="cm"> 005300000
</span><span class="cm"> 800000020
</span><span class="cm"> 070010500
</span><span class="cm"> 400005300
</span><span class="cm"> 010070006
</span><span class="cm"> 003200080
</span><span class="cm"> 060500009
</span><span class="cm"> 004000030
</span><span class="cm"> 000009700
</span><span class="cm"> */</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">shudu</span> <span class="o">{</span>
    <span class="kd">static</span> <span class="kt">int</span><span class="o">[</span><span class="o">]</span><span class="o">[</span><span class="o">]</span> <span class="n">table</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">9</span><span class="o">]</span><span class="o">[</span><span class="n">9</span><span class="o">]</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[</span><span class="o">]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">)</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">9</span><span class="o">;</span><span class="n">i</span><span class="o">+</span><span class="o">+</span><span class="o">)</span><span class="o">{</span>
            <span class="n">String</span> <span class="n">line</span><span class="o">=</span><span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">9</span><span class="o">;</span><span class="n">j</span><span class="o">+</span><span class="o">+</span><span class="o">)</span><span class="o">{</span>
                <span class="n">table</span><span class="o">[</span><span class="n">i</span><span class="o">]</span><span class="o">[</span><span class="n">j</span><span class="o">]</span><span class="o">=</span><span class="n">line</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">)</span><span class="o">-</span><span class="sc">&#39;0&#39;</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="c1">//System.out.println(table[1][1]);
</span><span class="c1"></span>        <span class="n">print</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>
        <span class="n">dfs</span><span class="o">(</span><span class="n">table</span><span class="o">,</span><span class="n">0</span><span class="o">,</span><span class="n">0</span><span class="o">)</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">dfs</span><span class="o">(</span><span class="kt">int</span><span class="o">[</span><span class="o">]</span><span class="o">[</span><span class="o">]</span> <span class="n">table</span><span class="o">,</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">x</span><span class="o">=</span><span class="o">=</span><span class="n">9</span><span class="o">)</span><span class="o">{</span>
            <span class="n">print</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>
            <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="n">0</span><span class="o">)</span><span class="o">;</span><span class="c1">//另有情况用return
</span><span class="c1"></span>        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="n">table</span><span class="o">[</span><span class="n">x</span><span class="o">]</span><span class="o">[</span><span class="n">y</span><span class="o">]</span><span class="o">=</span><span class="o">=</span><span class="n">0</span><span class="o">)</span><span class="o">{</span>
            <span class="c1">//选1-9之间符合条件数字填到x，y位置上
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">10</span><span class="o">;</span><span class="n">i</span><span class="o">+</span><span class="o">+</span><span class="o">)</span><span class="o">{</span><span class="c1">//进入下一个状态
</span><span class="c1"></span>                <span class="kt">boolean</span> <span class="n">res</span> <span class="o">=</span> <span class="n">check</span><span class="o">(</span><span class="n">table</span><span class="o">,</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="o">,</span><span class="n">i</span><span class="o">)</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">res</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">table</span><span class="o">[</span><span class="n">x</span><span class="o">]</span><span class="o">[</span><span class="n">y</span><span class="o">]</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
                    <span class="n">dfs</span><span class="o">(</span><span class="n">table</span><span class="o">,</span> <span class="n">x</span> <span class="o">+</span> <span class="o">(</span><span class="n">y</span> <span class="o">+</span> <span class="n">1</span><span class="o">)</span> <span class="o">/</span> <span class="n">9</span><span class="o">,</span> <span class="o">(</span><span class="n">y</span> <span class="o">+</span> <span class="n">1</span><span class="o">)</span> <span class="o">%</span> <span class="n">9</span><span class="o">)</span><span class="o">;</span><span class="c1">//纵深，深搜，进入到下一个状态；顺序为：先行后列
</span><span class="c1"></span>                <span class="o">}</span>
            <span class="o">}</span>
            <span class="c1">//回溯，返回上一个状态
</span><span class="c1"></span>            <span class="n">table</span><span class="o">[</span><span class="n">x</span><span class="o">]</span><span class="o">[</span><span class="n">y</span><span class="o">]</span> <span class="o">=</span><span class="n">0</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span><span class="o">{</span>
            <span class="c1">//继续找下一个需要处理的位置
</span><span class="c1"></span>            <span class="n">dfs</span><span class="o">(</span><span class="n">table</span><span class="o">,</span><span class="n">x</span><span class="o">+</span><span class="o">(</span><span class="n">y</span><span class="o">+</span><span class="n">1</span><span class="o">)</span><span class="o">/</span><span class="n">9</span><span class="o">,</span><span class="o">(</span><span class="n">y</span><span class="o">+</span><span class="n">1</span><span class="o">)</span><span class="o">%</span><span class="n">9</span><span class="o">)</span><span class="o">;</span>
        <span class="o">}</span>

    <span class="o">}</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">print</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">9</span><span class="o">;</span><span class="n">i</span><span class="o">+</span><span class="o">+</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">9</span><span class="o">;</span><span class="n">j</span><span class="o">+</span><span class="o">+</span><span class="o">)</span>
            <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">table</span><span class="o">[</span><span class="n">i</span><span class="o">]</span><span class="o">[</span><span class="n">j</span><span class="o">]</span><span class="o">)</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="c1">//检查满足（1）每一行、（2）每一列、（3）每一个同色九宫内的数字均含1-9，不重复。三个条件
</span><span class="c1"></span>    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">check</span><span class="o">(</span><span class="kt">int</span><span class="o">[</span><span class="o">]</span><span class="o">[</span><span class="o">]</span> <span class="n">table</span><span class="o">,</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="kt">int</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//检查同行同列
</span><span class="c1"></span>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">9</span><span class="o">;</span><span class="n">i</span><span class="o">+</span><span class="o">+</span><span class="o">)</span><span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">value</span><span class="o">=</span><span class="o">=</span><span class="n">table</span><span class="o">[</span><span class="n">x</span><span class="o">]</span><span class="o">[</span><span class="n">i</span><span class="o">]</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">value</span><span class="o">=</span><span class="o">=</span><span class="n">table</span><span class="o">[</span><span class="n">i</span><span class="o">]</span><span class="o">[</span><span class="n">y</span><span class="o">]</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="c1">//检查小九宫格
</span><span class="c1"></span>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">l</span> <span class="o">=</span> <span class="o">(</span><span class="n">x</span><span class="o">/</span><span class="n">3</span><span class="o">)</span><span class="o">*</span><span class="n">3</span><span class="o">;</span><span class="n">l</span><span class="o">&lt;</span><span class="o">(</span><span class="n">x</span><span class="o">/</span><span class="n">3</span><span class="o">+</span><span class="n">1</span><span class="o">)</span><span class="o">*</span><span class="n">3</span><span class="o">;</span><span class="n">l</span><span class="o">+</span><span class="o">+</span><span class="o">)</span><span class="o">{</span><span class="c1">//行
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="o">(</span><span class="n">y</span><span class="o">/</span><span class="n">3</span><span class="o">)</span><span class="o">*</span><span class="n">3</span><span class="o">;</span><span class="n">m</span><span class="o">&lt;</span><span class="o">(</span><span class="n">y</span><span class="o">/</span><span class="n">3</span><span class="o">+</span><span class="n">1</span><span class="o">)</span><span class="o">*</span><span class="n">3</span><span class="o">;</span><span class="n">m</span><span class="o">+</span><span class="o">+</span><span class="o">)</span><span class="o">{</span><span class="c1">//列
</span><span class="c1"></span>                <span class="k">if</span><span class="o">(</span><span class="n">table</span><span class="o">[</span><span class="n">l</span><span class="o">]</span><span class="o">[</span><span class="n">m</span><span class="o">]</span><span class="o">=</span><span class="o">=</span><span class="n">value</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="例题二部分和">例题二：部分和</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">train</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="cm">/*n=4
</span><span class="cm">* a={1,2,4,7}
</span><span class="cm">* k=13
</span><span class="cm">* */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">bufenhe</span> <span class="o">{</span>
    <span class="kd">static</span> <span class="kt">int</span> <span class="n">kk</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[</span><span class="o">]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">)</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[</span><span class="o">]</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">]</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">+</span><span class="o">+</span><span class="o">)</span><span class="o">{</span>
            <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span><span class="o">=</span><span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="kt">int</span> <span class="n">k</span> <span class="o">=</span><span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>
        <span class="n">kk</span><span class="o">=</span><span class="n">k</span><span class="o">;</span>
        <span class="n">dfs_bufenhe</span><span class="o">(</span><span class="n">a</span><span class="o">,</span><span class="n">k</span><span class="o">,</span><span class="n">0</span><span class="o">,</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">dfs_bufenhe</span><span class="o">(</span><span class="kt">int</span><span class="o">[</span><span class="o">]</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">k</span><span class="o">,</span><span class="kt">int</span> <span class="n">cur</span><span class="o">,</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">ints</span><span class="o">)</span> <span class="o">{</span><span class="c1">//变化的k和cur都是表示状态改变
</span><span class="c1"></span>        <span class="k">if</span><span class="o">(</span><span class="n">k</span><span class="o">=</span><span class="o">=</span><span class="n">0</span><span class="o">&amp;</span><span class="o">&amp;</span><span class="n">cur</span><span class="o">&lt;</span><span class="o">=</span><span class="n">a</span><span class="o">.</span><span class="na">length</span><span class="o">)</span><span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&#34;yes(&#34;</span><span class="o">+</span><span class="n">kk</span><span class="o">+</span><span class="s">&#34;=&#34;</span><span class="o">)</span><span class="o">;</span>
            <span class="kt">int</span> <span class="n">size</span><span class="o">=</span><span class="n">ints</span><span class="o">.</span><span class="na">size</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">size</span><span class="o">;</span><span class="n">i</span><span class="o">+</span><span class="o">+</span><span class="o">)</span><span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">ints</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)</span><span class="o">+</span><span class="o">(</span><span class="n">i</span><span class="o">=</span><span class="o">=</span><span class="o">(</span><span class="n">size</span><span class="o">-</span><span class="n">1</span><span class="o">)</span><span class="o">?</span><span class="s">&#34;&#34;</span><span class="o">:</span><span class="s">&#34;+&#34;</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&#34;)&#34;</span><span class="o">)</span><span class="o">;</span>
            <span class="o">}</span>

        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="n">k</span><span class="o">&lt;</span><span class="n">0</span><span class="o">|</span><span class="o">|</span><span class="n">cur</span><span class="o">=</span><span class="o">=</span><span class="n">a</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span><span class="c1">//回退的条件
</span><span class="c1"></span>        <span class="k">if</span><span class="o">(</span><span class="n">k</span><span class="o">&gt;</span><span class="n">0</span><span class="o">|</span><span class="o">|</span><span class="n">cur</span><span class="o">&lt;</span><span class="n">a</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="o">{</span><span class="c1">//这一行可以注释
</span><span class="c1"></span>            <span class="n">ints</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">[</span><span class="n">cur</span><span class="o">]</span><span class="o">)</span><span class="o">;</span>
            <span class="n">dfs_bufenhe</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">k</span> <span class="o">-</span> <span class="n">a</span><span class="o">[</span><span class="n">cur</span><span class="o">]</span><span class="o">,</span> <span class="n">cur</span> <span class="o">+</span> <span class="n">1</span><span class="o">,</span><span class="n">ints</span><span class="o">)</span><span class="o">;</span><span class="c1">//要第cur个元素的值，进入下一个状态
</span><span class="c1"></span>
            <span class="c1">//回溯
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="n">ints</span><span class="o">.</span><span class="na">size</span><span class="o">(</span><span class="o">)</span><span class="o">-</span><span class="n">1</span><span class="o">;</span>
            <span class="n">ints</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">index</span><span class="o">)</span><span class="o">;</span>
            <span class="n">dfs_bufenhe</span><span class="o">(</span><span class="n">a</span><span class="o">,</span><span class="n">k</span><span class="o">,</span><span class="n">cur</span><span class="o">+</span><span class="n">1</span><span class="o">,</span><span class="n">ints</span><span class="o">)</span><span class="o">;</span><span class="c1">//不要第cur个元素的值，即进入平行状态
</span><span class="c1"></span>        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></td></tr></table>
</div>
</div>]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/">蓝桥杯</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/algorithm/">algorithm</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/algorithm/">algorithm</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>2.17高数笔记</title>
                <link>https://zhangshaopu.github.io/posts/2.17%E9%AB%98%E6%95%B0%E7%AC%94%E8%AE%B0/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/2.17%E9%AB%98%E6%95%B0%E7%AC%94%E8%AE%B0/</guid>
                <pubDate>Mon, 17 Feb 2020 21:55:26 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h2 id="对求极限时什么时候可以代数的思考">对求极限时什么时候可以代数的思考</h2>

<h3 id="代入的原理">代入的原理：</h3>

<p>根据函数连续的定义，当f(x)在x-&gt;x0时,极限等于这一点在函数的值。</p>

<p>上述定理就是很多式子可以直接代入的原理。</p>

<h3 id="是否可以部分代入">是否可以部分代入？</h3>

<p>首先要把整个式子化为乘积形式，其中有的因式可以代入，有的因式不可代入。【注：一定要先把整个式子化为乘积形式，否则下述讨论不成立！！！】</p>

<ol>
<li>如果某个因式的极限为非零常数，该因式可以代入。.这一步可以反复进行，直至不能继续。</li>
<li>如果所有因式的极限均为非零常数或无穷大，所有因式均可以代入，最终结果为非零常数或无穷大；如果所有因式的极限均为常数，所有因式均可以代入，最终结果为常数。</li>
<li>如果因式a的极限为0，因式b的极限为无穷大，则a和b构成<strong>未定式</strong>，a和b不可代入。</li>
<li>如果某个因式震荡不收敛，显然不可代入。</li>
</ol>

<h3 id="未定式">未定式</h3>

<p><span  class="math">\[\frac{0}{0} ,
\frac{\infty}{\infty} ,
0{\times}{\infty},
\]</span></p>

<p>指数未定型
<span  class="math">\( 
1^{\infty},0^0,{\infty}^0 
\)</span></p>

<h2 id="反函数的特点">反函数的特点</h2>

<ol>
<li>反函数图像关于y=x对称。图像画法：在原三角函数图像上取一些点，画出这鞋点关于y=x的对称点，连接对称点即可。</li>
<li>只有单调递增（或者递减）才有反函数。</li>
</ol>

<p>摘自:<a href="https://zhuanlan.zhihu.com/p/96000422">https://zhuanlan.zhihu.com/p/96000422</a></p>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/study/">study</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/math/">math</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/math/">math</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>ubantu包管理工具</title>
                <link>https://zhangshaopu.github.io/posts/ubantu%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/ubantu%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid>
                <pubDate>Mon, 17 Feb 2020 15:36:27 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h2 id="apt-安装需要sudo即root权限">apt 安装需要sudo，即root权限</h2>
<p>sudo apt-get update 更新源</p>
<blockquote>
<p>要想使用apt-get下载安装软件，需要去/etc/apt/source/list中的镜像源地址中去下载，那么我们仅仅是知道去哪里下载，镜像源地址中有什么软件，我们并不清楚，所以需要使用apt-get update来刷新软件的索引，从而确定我们要的软件在镜像站点中是否存在。
apt-get update会扫描每个镜像站点，并为该站点所具有的软件包资源建立索引文件，存放在本地的/var/lib/apt/list中。在使用apt-get命令执行安装或者更新操作时都会依赖这些索引文件，所以在每次更新或者安装前应该使用apt-get update命令来刷新索引，从而获取最新的软件资源。</p>
</blockquote>
<pre><code>sudo apt-get install package 安装包 下载的软件都会存到/var/cache/apt/archives下

sudo apt-get remove package 删除包

sudo apt-cache search package 搜索软件包

sudo apt-cache show package 获取包的相关信息，如说明 大小 版本等

sudo apt-get install package --reinstall 重新安装包

sudo apt-get -f install 修复安装

sudo apt-get remove package --purge 删除包，包括配置文件等

sudo apt-get build-dep package 安装相关的编译环境

sudo apt-get upgrade 更新已安装的包
&gt;将系统中所有的软件包一次性升级到最新版本。

sudo apt-cache depends package 了解使用该包依赖那些包

sudo apt-cache rdepends package 查看该包被那些包依赖

sudo apt-get source package 下载包的源代码
</code></pre><h2 id="deb软件包安装">deb软件包安装</h2>
<p>sudo dpkg -i xxx.deb</p>
<h2 id="修改apt源地址">修改apt源地址</h2>
<p>国内镜像为：https://mirrors.tuna.tsinghua.edu.cn/</p>
<pre><code>进入 cd /etc/apt

备份一份 cp /etc/apt/sourcs.list /etc/apt/sources.list.backup

切换为root用户将sources.list清空

su root 切换root用户

echo ' ' &gt; sources.list 清空

vim sources.list 复制镜像拷贝到该文件

更新源 sudo apt-get update
</code></pre><h2 id="几种执行文件的运行方式">几种执行文件的运行方式</h2>
<ol>
<li>AppImage文件的运行：</li>
</ol>
<blockquote>
<p>AppImage的核心思想是一个应用程序 = 一个文件 。每个AppImage都包含应用程序以及应用程序运行所需的所有文件。换句话说，除了操作系统本身的基础组件，Appimage不需要依赖包即可运行。让所有常见发行版的用户运行它, 一次打包，到处运行。 覆盖所有主流桌面系统</p>
</blockquote>
<pre><code>chmod a+x xxx.AppImage //添加可执行权限
./xxx.AppImage  //运行
</code></pre><blockquote>
<p>chmod是权限管理命令change the permissions mode of a file的缩写
chmod a+x xxx.AppImage 就表示对当前目录下的xxx文件的所有者增加可执行权限
u 代表用户
x代表执行权限
g 代表用户组.
o 代表其他.
a 代表所有.</p>
</blockquote>
<ul>
<li>表示增加权限</li>
</ul>
<h2 id="解压文件以安装">解压文件以安装</h2>
<p>unzip命令  语法：unzip ［选项］ 压缩文件名.zip</p>
<p>各选项的含义分别为 :</p>
<pre><code>-x 文件列表 解压缩文件，但不包括指定的file文件。

-v 查看压缩文件目录，但不解压。

-t 测试文件有无损坏，但不解压。

-d 目录 把压缩文件解到指定目录下。

-z 只显示压缩文件的注解。

-n 不覆盖已经存在的文件。

-o 覆盖已存在的文件且不要求用户确认。

-j 不重建文档的目录结构，把所有文件解压到同一目录下。
</code></pre><h2 id="tarxz文件解压方式">tar.xz文件解压方式</h2>
<pre><code>首先打包成tar文件
xz -d xxx.tar.xz
接着用
tar -xvf xxx.tar
</code></pre>]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/tech/">tech</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/ubantu/">ubantu</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/ubantu/">ubantu</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>2020.2.14高数笔记</title>
                <link>https://zhangshaopu.github.io/posts/2.16%E9%AB%98%E6%95%B0%E7%AC%94%E8%AE%B0/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/2.16%E9%AB%98%E6%95%B0%E7%AC%94%E8%AE%B0/</guid>
                <pubDate>Sun, 16 Feb 2020 18:28:08 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h2 id="对于有界性的理解">对于有界性的理解</h2>
<p>数列、函数的</p>
<ul>
<li>有界分为：收敛和不收敛(上下跳动)两种情况</li>
<li>无界分为：无穷大、（不包括无穷小) <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></li>
</ul>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p>无穷小时极限中的概念,无穷小可以从两个方向去理解</p>
<ul>
<li>当从0的左侧趋向无穷小时就是一个无限趋近0的负数,但是永远不能等于0；</li>
<li>当从0的右侧趋向无穷小时就是一个无限趋近0的正数,但是永远不能等于0；
所以这样看,无穷小有可能是负数.</li>
</ul>
 <a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></li>
</ol>
</section>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/study/">study</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/math/">math</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/math/">math</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>基于pytorch的单样本学习和孪生网络图像识别</title>
                <link>https://zhangshaopu.github.io/posts/%E5%9F%BA%E4%BA%8Epytorch%E7%9A%84%E5%8D%95%E6%A0%B7%E6%9C%AC%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%AD%AA%E7%94%9F%E7%BD%91%E7%BB%9C%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/%E5%9F%BA%E4%BA%8Epytorch%E7%9A%84%E5%8D%95%E6%A0%B7%E6%9C%AC%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%AD%AA%E7%94%9F%E7%BD%91%E7%BB%9C%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/</guid>
                <pubDate>Sun, 16 Feb 2020 01:05:30 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h2 id="实验分析">实验分析：</h2>
<p>传统观点一般认为深度神经网络通常比较擅长从高维数据中学习，例如图像或者语言，但这是建立在它们有大量标记的样本来训练的情况下。然而，人类却拥有单样本学习的能力———如果你找一个从来没有见过苹果的小朋友，给它们一张苹果的图片，他们应该就能很成功的将它从其他水果里面鉴别出来，而不需要用很多种类的水果学习。传统的深度学习需要大量的数据作为代价，而单样本学习则不需要。</p>
<h2 id="实验内容">实验内容：</h2>
<h2 id="孪生网络siamese-networks">孪生网络（Siamese Networks）：</h2>
<p>孪生网络是一中特殊的神经网络结构类型，相比较于经典模型用于学习如何对输入进行分类，孪生网络则是学习如何区分一个输入对的区别和相同之处。</p>
<h2 id="网络结构">网络结构：</h2>
<p>孪生网络包含两个完全相同的神经网络，每个网络接受一个输入图像，网络的最后一层反馈给一个对比损失函数，该函数计算两个图像的相似度。两个孪生网络参数相同。我们使用标准的卷积神经网络结构，具有三层卷积层和三层全连接层，在每个卷积层之后使用batch normalisation后进行drop out.</p>
<p><img src="/images/pic1.png" alt="asdf">
代码:todo...</p>
<h2 id="对比损失函数">对比损失函数：</h2>
<p>孪生体系结构的目标不是对输入图像进行分类，而是对其进行区分，因此分类损失函数不是最佳拟合函数。对比损失函数如下：</p>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/deepleaning/">deepleaning</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/pytorch/">pytorch</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/pytorch/">pytorch</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Git更新本地库</title>
                <link>https://zhangshaopu.github.io/posts/git%E6%9B%B4%E6%96%B0%E6%9C%AC%E5%9C%B0%E5%BA%93/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/git%E6%9B%B4%E6%96%B0%E6%9C%AC%E5%9C%B0%E5%BA%93/</guid>
                <pubDate>Sat, 15 Feb 2020 13:59:37 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h2 id="一查看git远程仓库地址">一、查看git远程仓库地址</h2>
<pre><code>git remote -v
需要添加则 git remote add &lt;origin(名字)&gt; &lt;url&gt;
需要改则先删除  git remote rm origin

</code></pre><h2 id="二更新本地库代码的两种方式">二、更新本地库代码的两种方式</h2>
<ol>
<li>法一</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">$git fetch origin master  从远程的origin仓库的master分支下载代码到本地的origin master
 
$git log -p master.. origin/master  比较本地的仓库和远程参考的区别
 
$git merge origin/master  把远程下载下来的代码合并到本地仓库，远程的和本地的合并
</code></pre></td></tr></table>
</div>
</div><p>错误如下：</p>
<p>fatal: refusing to merge unrelated histories
（拒绝合并不相关的历史）</p>
<p>可以在pull命令后紧接着使用--allow-unrelated-history选项来解决问题</p>
<ol start="2">
<li>法二</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">$git fetch origin master:temp  从远程的origin仓库的master分支下载到本地并新建一个分支temp
 
$git diff temp  比较master分支和temp分支的不同
 
$git merge temp  合并temp分支到master分支
 
$git branch -d temp  删除temp
</code></pre></td></tr></table>
</div>
</div><h2 id="版本回退">版本回退</h2>
<ol>
<li>命令显示从最近到最远的提交日志</li>
</ol>
<pre><code>git log
</code></pre><ol start="2">
<li>回退</li>
</ol>
<pre><code>git reset --hard &lt;版本号&gt;（只需要前面4位，git自己补全）
</code></pre><h2 id="忽略文件">忽略文件</h2>
<ul>
<li>当不想git push上去的某些文件可以卸载忽略文件中</li>
</ul>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/tech/">tech</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/git/">git</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/git/">git</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>2020.2.14高数笔记</title>
                <link>https://zhangshaopu.github.io/posts/2.14%E9%AB%98%E6%95%B0%E7%AC%94%E8%AE%B0/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/2.14%E9%AB%98%E6%95%B0%E7%AC%94%E8%AE%B0/</guid>
                <pubDate>Fri, 14 Feb 2020 20:56:07 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h1 id="2020214高数笔记">2020.2.14高数笔记</h1>
<h2 id="对数的理解">对数的理解：</h2>
<ol>
<li>例如logaN,值为以a为底N的对数（即以a为底的阶数）</li>
<li>ln为自然对数，底为e</li>
<li>对于自然对数，lnb,要想去掉ln，可以用e的lnb次=b；</li>
</ol>
<h2 id="对无穷小的理解">对无穷小的理解：</h2>
<ul>
<li>当某一函数的自变量趋向于某一可以确定的（eg:x-&gt;0），因变量无限趋向于0，就是无穷小。无穷小没有正负之分</li>
</ul>
<h2 id="等价无穷小的性质">等价无穷小的性质：</h2>
<ul>
<li>何为等价：即两个函数它们的无穷小可以等价。</li>
<li>其中两个函数等价无穷小的充分必要条件：todo...</li>
</ul>
<h2 id="应用">应用:</h2>
<ul>
<li>当x-&gt;0时，有几个常用的等价无穷小，（即可以在求极限的问题中在满足条件情况下替换）以消去未知量以求得极限。</li>
</ul>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/study/">study</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/math/">math</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/math/">math</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Ubantu</title>
                <link>https://zhangshaopu.github.io/posts/ubantu/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/ubantu/</guid>
                <pubDate>Fri, 14 Feb 2020 14:25:56 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h1 id="命令行软件包管理">命令行软件包管理</h1>
<h2 id="apt"> APT</h2>
<blockquote>
<p>针对DPKG来说，它只能安装一个deb格式的包，同时会通知你安装这个包需要什么样的依赖，但是不会安装那些依赖文件，同时也对这个包进行配置，因为那些依赖包并没有下载安装。
APT（或者是APT-GET) 是一个包管理系统(Package Management System) 。它不仅可以安装包本身，也可以将对应的依赖下载安装，并且配置他们。</p>
</blockquote>
<p>APT (Advanced Package Tool,高级软件包工具) 是一个强大的包管理系统，而那些图形化程序如 添加/删除 应用程序 和 Synaptic 都是建立在它的基础之上的。APT 自动处理依赖关系并在系统软件包执行其他操作以便安装所要的软件包。 运行 APT 要求管理权限 (参见 第1.3.3节 ― root 用户和 sudo 命令)。</p>
<ul>
<li>可以被 APT 使用的一些常用命令：</li>
</ul>
<ol>
<li>安装软件包：
sudo apt-get install packagename</li>
<li>删除软件包：
sudo apt-get remove packagename</li>
<li>获取新的软件包列表：
sudo apt-get update</li>
<li>升级有可用更新的系统：
sudo apt-get upgrade</li>
<li>列出更多命令和选项：
apt-get help
有关 APT 用法的更多信息，请阅读全面的 Debian APT 用户手册。</li>
</ol>
<h2 id="使用-aptoncd-来安装软件包">使用 APTonCD 来安装软件包</h2>
<blockquote>
<p>APTonCD可用来制作包含有您系统上所有软件包的CD，也可以制作包含的您选择的软件包或软件仓库的CD。在软件包管理器比如新立得中，找到aptoncd软件包并安装它。
更多有关 APTonCD 的文档可以在它的网站找到， aptoncd.sourceforge.net</p>
</blockquote>
<ul>
<li>安装单个软件包文件</li>
</ul>
<p>安装程序的首选方式是通过本章所介绍的软件包管理器。然而，虽然 Ubuntu 软件包库非常大，但也有可能您想要安装的软件包并不在 Ubuntu 库中。如果这样的话，您也可以从网站下载并安装文件。 在您安装文件之前确认您所下载的文件来自一个安全的源是重要的。 有许多不同类型的 Linux 软件包文件。它们多数与特定 Linux 发行版的软件管理器相关联。如 Debian 软件包 文件 (.deb 文件)、Redhat 软件包管理器 文件 (.rpm 文件) 和 Tarballs (.tar 文件)。 本部分内容将介绍如何安装这些单个文件。 无法保证这些文件将与您系统兼容，如果您安装这些文件的话，您也将无法得到安全更新。有鉴于此，如果您想安装程序的话，请尽可能通过软件包管理器来安装由 Ubuntu 自身提供的应用程序软件包。</p>
<h2 id="安装卸载-deb-文件">安装/卸载 .deb 文件</h2>
<ul>
<li>这些是Debian 软件包。这些与 Ubuntu 相关的软件包文件使用 .deb 后缀是因为 Ubuntu 与 Debian GNU/Linux 发行版有着紧密的关系。您将需要管理权限来安装 .deb 文件 (参见 第1.3.3节 ― root 用户和 sudo 命令)。</li>
<li>要安装 .deb 文件，简单地双击它，然后选择 安装软件包 即可。或者，您也可以打开一个终端并输入：
sudo dpkg -i package_file.deb 来安装 .deb 文件。
如需卸载 .deb 文件，在您软件包管理器中反选它，或输入：
sudo dpkg -r package_name</li>
</ul>
<h2 id="将-rpm-文件转为-deb-文件">将 .rpm 文件转为 .deb 文件</h2>
<p>另一种软件包文件是 .rpm为后缀的 Red Hat 软件包管理器文件。我们并不建议在 Ubuntu 系统中安装它们。在绝大多数情况下，Ubuntu 自身的 .deb 软件包是可用的。然而，如果绝对必要，可以使用程序 alien 将 .rpm 文件转化为.deb 文件。
安装 alien 程序 (2 ― 添加、删除和更新应用程序)。
在终端使用管理权限运行以下命令：
sudo alien package_file.rpm</p>
<h2 id="安装-tarballs">安装 tarballs</h2>
<p>以 .tar.gz 或 .tar.bz2 作为后缀名的文件是在 Linux 和 Unix 中被广泛使用的 tarballs 的打包文件。 如果在任何 Ubuntu 软件库中都没有 Ubuntu 的软件包，您可以按照软件包自带的指示使用命令行来安装和卸载 Tarball 文件。 Tarballs 通常包括程序的源代码，并且需要 编译 才能使用。要做到这一点，一般需要其它软件 (参见 第3.8.1节 ― 基本编译器)。</p>
<h2 id="dpkg命令">dpkg命令</h2>
<pre><code>dpkg常见用法： man dpkg
dpkg -i package.deb 安装包
dpkg -r package 删除包，不建议，不自动卸载依赖于它的包
dpkg -P package 删除包（包括配置文件）
dpkg -l 列出当前已安装的包，类似rpm -qa
dpkg -l package 显示该包的简要说明，类似rpm –qi
dpkg -L package 列出该包中所包含的文件，类似rpm –ql
dpkg -S \&lt; pattern\&gt; 搜索包含pattern的包，类似rpm –qf
dpkg -s package 列出该包的状态，包括详细信息，类似rpm –qi
dpkg --configure package 配置包，-a 使用，配置所有没有配置的软件包
dpkg -c package.deb 列出 deb 包的内容，类似rpm –qpl
dpkg --unpack package.deb 解开 deb 包的内容

dpkg示例：
列出系统上安装的所有软件包
dpkg -l
列出软件包安装的文件
dpkg -L bash
查看/bin/bash来自于哪个软件包
dpkg -S /bin/bash
安装本地的 .deb 文件
dpkg -i /mnt/cdrom/pool/main/z/zip/zip_3.0-11build1_amd64.deb
卸载软件包
dpkg -r zip
注意：一般建议不要使用dpkg卸载软件包。因为删除包时，依赖于它的其他任何包仍将安装，并且可能无法再正常运行
</code></pre><h1 id="apt-1">apt</h1>
<ul>
<li>Debian 使用APT工具来管理包系统，它与 rpm 命令不同。 在基于 Debian 的 Linux 发行版中，有各种工具可以与 APT 进行交互，以方便用户安装、删除和管理的软件包。</li>
<li>apt-get 是其中一个常用的命令行工具，另外一款较为流行的命令行与 GUI 兼顾的工具是 Aptitude ，之前最常用的 Linux包管理命令都被分散在了 apt-get、 apt-cache和 apt-config 这三条命令中在 2014 年apt 命令发布第一个稳定版，Ubuntu 16.04 引入新特性之一便是 apt 命令，apt 命令解决了命令过于分散的问题，它包括 apt-get 命令出现以来使用最广泛的功能选项，以及 apt-cache 和 apt-config命令中很少用到的功能。在使用 apt 命令时，用户不必再由 apt-get 转到 apt-cache 或 apt-config，提供管理软件包所需的必要选项</li>
<li>apt 相当于 apt-get、 apt-cache 和 apt-config 中最常用命令选项的集合</li>
<li>apt 具有更精减但足够的命令选项，而且参数选项的组织方式更为有效。此外，启用的几个特性也非常有帮助。例如，可以在使用 apt命令安装或删除程序时看到进度条。</li>
<li>apt 还会在更新存储库数据库时提示用户可升级的软件包个数</li>
<li>apt 与 apt-get有一些类似的命令选项，但它并不能完全向下兼容 apt-get 命令,也即可用 apt 替换部分 apt-get 系列命令，但不是全部</li>
</ul>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/tech/">tech</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/ubantu/">ubantu</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/ubantu/">ubantu</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>高数中对式子的处理</title>
                <link>https://zhangshaopu.github.io/posts/%E9%AB%98%E6%95%B0%E4%B8%AD%E5%AF%B9%E5%BC%8F%E5%AD%90%E7%9A%84%E5%A4%84%E7%90%86/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/%E9%AB%98%E6%95%B0%E4%B8%AD%E5%AF%B9%E5%BC%8F%E5%AD%90%E7%9A%84%E5%A4%84%E7%90%86/</guid>
                <pubDate>Thu, 13 Feb 2020 17:33:06 +0800</pubDate>
                
                
                
                    <description><![CDATA[<ul>
<li>
<p>需要找出一个等式的是否大于或者小于一个数时，不要忘记用基本不等式</p>
</li>
<li>
<p>看到根号式子，可以尝试有理化</p>
</li>
<li>
<p>看到分式，可以尝试同分</p>
</li>
</ul>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/study/">study</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/math/">math</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/math/">math</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>夹逼定理</title>
                <link>https://zhangshaopu.github.io/posts/%E5%A4%B9%E9%80%BC%E5%AE%9A%E7%90%86/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/%E5%A4%B9%E9%80%BC%E5%AE%9A%E7%90%86/</guid>
                <pubDate>Thu, 13 Feb 2020 16:16:37 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h2 id="对于夹逼定理求两边表达式方法">对于夹逼定理求两边表达式方法：</h2>
<ol>
<li>
<p>a<sub>n</sub>&lt;=b<sub>n</sub>&lt;=c<sub>n</sub>  <strong>等号</strong>的意思为n趋于无穷的时候极限的大小比较</p>
</li>
<li>
<p>使两边分子分母的<strong>阶数</strong>与中间项相同，比如分子为1 ，n个分式相加，则分子的阶数为n。若分母为n方+1...n2 +n，则n个分式相加，由于分式加法法则，只用取阶数最大的作为分母即可，因为当n趋于无穷的时候，阶数小于2的数相对于已经非常小</p>
</li>
</ol>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/study/">study</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/math/">math</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/math/">math</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Git 操作</title>
                <link>https://zhangshaopu.github.io/posts/git%E6%93%8D%E4%BD%9C/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/git%E6%93%8D%E4%BD%9C/</guid>
                <pubDate>Sun, 09 Feb 2020 20:56:07 +0800</pubDate>
                
                
                
                    <description><![CDATA[<h2 id="git-rm-与-rm-q的区别">git rm 与 rm q的区别</h2>
<h2 id="git-branch--a">git branch -a</h2>
<p>查询分支</p>
<h2 id="git-分支创建的合并">git 分支创建的合并</h2>
<p>1、切换到基础分支，如主干</p>
<pre><code>git checkout master
</code></pre><p>2、创建并切换到新分支</p>
<pre><code>git checkout -b panda
</code></pre><p>git branch可以看到已经在panda分支上</p>
<p>3、更新分支代码并提交</p>
<pre><code>git add *

git commit -m &quot;&quot;
</code></pre><p>4、push 到远程分支panda/origin</p>
<pre><code>git push origin origin 
git push origin panda
</code></pre><p>5.将某一分支合并到master分支
1、切换到master ：git  checkout master
2、如果是多人开发的话 需要把远程master上的代码pull下来： git pull origin master
3、git  merge 分支名
4、git push</p>
<p>6、 更新远程分支列表</p>
<pre><code>git remote update origin --prune

</code></pre><h2 id="git-add-和-git-add--a区别">git add .和 git add -A区别</h2>
<p>git add . ：他会监控&lt;工作区的状态树&gt;，使用它会把工作时的所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)，但不包括被删除的文件。</p>
<p>git add -u ：他仅监控已经被add的文件（即tracked file），他会将被修改的文件提交到暂存区。add -u &lt;不会提交新文件&gt;（untracked file）。（git add --update的缩写）</p>
<p>git add -A ：是上面两个功能的合集（git add --all的缩写）</p>
]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/tech/">tech</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/git/">git</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/git/">git</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Git 更换代理设置</title>
                <link>https://zhangshaopu.github.io/posts/git%E6%9B%B4%E6%8D%A2%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/git%E6%9B%B4%E6%8D%A2%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</guid>
                <pubDate>Sun, 09 Feb 2020 20:56:07 +0800</pubDate>
                
                
                
                    <description><![CDATA[<p>Github 更换代理设置</p>
<h3 id="两种形式">两种形式：</h3>
<h4 id="http形式">http形式：</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">git clone https://github.com/xxx/git.git
</code></pre></td></tr></table>
</div>
</div><h4 id="修改git-config">修改git config：</h4>
<h4 id="一走http代理">一、走http代理：</h4>
<h4 id="1-只对github进行代理">1. 只对github进行代理</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">git config --global http.https://github.com.proxy https://127.0.0.1:1080
git config --global https.https://github.com.proxy https://127.0.0.1:1080
</code></pre></td></tr></table>
</div>
</div><h4 id="2-全局代理">2. 全局代理</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">git config --global http.proxy &#34;http://127.0.0.1:8080&#34; 
git config --global https.proxy &#34;http://127.0.0.1:8080&#34;
</code></pre></td></tr></table>
</div>
</div><h4 id="二走-socks5-代理如-shadowsocks">二、走 socks5 代理（如 Shadowsocks）</h4>
<h4 id="1-全局代理">1. 全局代理</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">git config --global http.proxy &#34;socks5://127.0.0.1:1080&#34;
git config --global https.proxy &#34;socks5://127.0.0.1:1080&#34;
</code></pre></td></tr></table>
</div>
</div><h4 id="2-只对github进行代理">2. 只对github进行代理</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">git config --global http.https://github.com.proxy socks5://127.0.0.1:1086
git config --global https.https://github.com.proxy socks5://127.0.0.1:1086
</code></pre></td></tr></table>
</div>
</div><h4 id="三查看已有配置">三、查看已有配置</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">git config --global -l
</code></pre></td></tr></table>
</div>
</div><blockquote>
<p>注意：8080为端口号，需要查看vpn的http/socks5端口号</p>
</blockquote>
<h4 id="取消设置">取消设置：</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">git config --global --unset http.proxy
git config --global --unset https.proxy
</code></pre></td></tr></table>
</div>
</div>]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/tech/">tech</category>
                                
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/git/">git</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/git/">git</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Markdown Syntax Guide</title>
                <link>https://zhangshaopu.github.io/posts/markdown-syntax/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/markdown-syntax/</guid>
                <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
                
                
                
                    <description><![CDATA[<p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.
<img src="/images/hero-2.jpg" alt="" title="说明文字"></p>
<h2 id="headings">Headings</h2>
<p>The following HTML <code>&lt;h1&gt;</code>—<code>&lt;h6&gt;</code> elements represent six levels of section headings. <code>&lt;h1&gt;</code> is the highest section level while <code>&lt;h6&gt;</code> is the lowest.</p>
<h1 id="h1">H1</h1>
<h2 id="h2">H2</h2>
<h3 id="h3">H3</h3>
<h4 id="h4">H4</h4>
<h5 id="h5">H5</h5>
<h6 id="h6">H6</h6>
<h2 id="paragraph">Paragraph</h2>
<p>Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.</p>
<p>Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.</p>
<h2 id="blockquotes">Blockquotes</h2>
<p>The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a <code>footer</code> or <code>cite</code> element, and optionally with in-line changes such as annotations and abbreviations.</p>
<h4 id="blockquote-without-attribution">Blockquote without attribution</h4>
<blockquote>
<p>Tiam, ad mint andaepu dandae nostion secatur sequo quae.
<strong>Note</strong> that you can use <em>Markdown syntax</em> within a blockquote.</p>
</blockquote>
<h4 id="blockquote-with-attribution">Blockquote with attribution</h4>
<blockquote>
<p>Don't communicate by sharing memory, share memory by communicating.
— <cite>Rob Pike<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></cite></p>
</blockquote>
<h2 id="tables">Tables</h2>
<p>Tables aren't part of the core Markdown spec, but Hugo supports supports them out-of-the-box.</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Age</th>
</tr>
</thead>
<tbody>
<tr>
<td>Bob</td>
<td>27</td>
</tr>
<tr>
<td>Alice</td>
<td>23</td>
</tr>
</tbody>
</table>
<h4 id="inline-markdown-within-tables">Inline Markdown within tables</h4>
<table>
<thead>
<tr>
<th>Inline   </th>
<th>Markdown   </th>
<th>In   </th>
<th>Table</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>italics</em></td>
<td><strong>bold</strong></td>
<td><del>strikethrough</del>   </td>
<td><code>code</code></td>
</tr>
</tbody>
</table>
<h2 id="code-blocks">Code Blocks</h2>
<h4 id="code-block-with-backticks">Code block with backticks</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">html
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p"></span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p"></span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;UTF-8&#34;</span><span class="p"></span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p"></span><span class="p">&gt;</span>Example HTML5 Document<span class="p">&lt;</span><span class="p">/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="p">/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p"></span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">p</span><span class="p"></span><span class="p">&gt;</span>Test<span class="p">&lt;</span><span class="p">/</span><span class="nt">p</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="p">/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="p">/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="code-block-with-hugos-internal-highlight-shortcode">Code block with Hugo's internal highlight shortcode</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p"></span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p"></span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;UTF-8&#34;</span><span class="p"></span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p"></span><span class="p">&gt;</span>Example HTML5 Document<span class="p">&lt;</span><span class="p">/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="p">/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p"></span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">p</span><span class="p"></span><span class="p">&gt;</span>Test<span class="p">&lt;</span><span class="p">/</span><span class="nt">p</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="p">/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="p">/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="list-types">List Types</h2>
<h4 id="ordered-list">Ordered List</h4>
<ol>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
</ol>
<h4 id="unordered-list">Unordered List</h4>
<ul>
<li>List item</li>
<li>Another item</li>
<li>And another item</li>
</ul>
<h4 id="nested-list">Nested list</h4>
<ul>
<li>Item</li>
</ul>
<ol>
<li>First Sub-item</li>
<li>Second Sub-item</li>
</ol>
<h2 id="other-elements--abbr-sub-sup-kbd-mark">Other Elements — abbr, sub, sup, kbd, mark</h2>
<p><abbr title="Graphics Interchange Format">GIF</abbr> is a bitmap image format.</p>
<p>H<sub>2</sub>O</p>
<p>X<sup>n</sup> + Y<sup>n</sup> = Z<sup>n</sup></p>
<p>Press <kbd><kbd>CTRL</kbd>+<kbd>ALT</kbd>+<kbd>Delete</kbd></kbd> to end the session.</p>
<p>Most <mark>salamanders</mark> are nocturnal, and hunt for insects, worms, and other small creatures.</p>
<h2 id="图片">图片</h2>
<p><img src="http://img.blog.fandong.me/2017-08-26-Markdown-Advance-Video.jpg" alt="图片描述"></p>
<h2 id="markdown嵌套视频">Markdown嵌套视频</h2>
<video id="video" controls="" preload="none" poster="http://img.blog.fandong.me/2017-08-26-Markdown-Advance-Video.jpg">
      <source id="mp4" src="http://img.blog.fandong.me/2017-08-26-Markdown-Advance-Video.mp4" type="video/mp4">
      </video>
<pre><code>&lt;video id=&quot;video&quot; controls=&quot;&quot; preload=&quot;none&quot; poster=&quot;http://img.blog.fandong.me/2017-08-26-Markdown-Advance-Video.jpg&quot;&gt;
      &lt;source id=&quot;mp4&quot; src=&quot;http://img.blog.fandong.me/2017-08-26-Markdown-Advance-Video.mp4&quot; type=&quot;video/mp4&quot;&gt;
      &lt;/video&gt;
</code></pre><h2 id="嵌套bilibili视频">嵌套bilibili视频</h2>
<iframe height="400" width="600" src="//player.bilibili.com/player.html?aid=54774652&cid=95807300&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
<pre><code>&lt;iframe height=&quot;400&quot; width=&quot;600&quot; src=&quot;//player.bilibili.com/player.html?aid=54774652&amp;cid=95807300&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;
</code></pre><h2 id="markdown嵌套音频">Markdown嵌套音频</h2>
<audio id="audio" controls="" preload="none">
      <source id="mp3" src="http://qiniu.cloud.fandong.me/Music_iP%E8%B5%B5%E9%9C%B2%20-%20%E7%A6%BB%E6%AD%8C%20%28Live%29.mp3">
      </audio>
<pre><code>&lt;audio id=&quot;audio&quot; controls=&quot;&quot; preload=&quot;none&quot;&gt;
      &lt;source id=&quot;mp3&quot; src=&quot;http://qiniu.cloud.fandong.me/Music_iP%E8%B5%B5%E9%9C%B2%20-%20%E7%A6%BB%E6%AD%8C%20%28Live%29.mp3&quot;&gt;
      &lt;/audio&gt;
</code></pre><h2 id="想在别的地方让别人给你的仓库star的美好方式">想在别的地方让别人给你的仓库Star的美好方式</h2>
<iframe
    style="margin-left: 2px; margin-bottom:-5px;"
    frameborder="0" scrolling="0" width="100px" height="20px"
    src="https://ghbtns.com/github-btn.html?user=fandongtongxue&repo=fandongtongxue.github.io&type=star&count=true" >
</iframe>
<p>参数	 必传	 类型	   备注
user	true	String	用户名
repo	true	String	仓库名字
type	true	String	star
count	true	String	数量</p>
<pre><code>&lt;iframe
  style=&quot;margin-left: 2px; margin-bottom:-5px;&quot;
  frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;100px&quot; height=&quot;20px&quot;
  src=&quot;https://ghbtns.com/github-btn.html?user=fandongtongxue&amp;repo=fandongtongxue.github.io&amp;type=star&amp;count=true&quot; &gt;
&lt;/iframe&gt;
</code></pre><section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p>The above quote is excerpted from Rob Pike's <a href="https://www.youtube.com/watch?v=PAAkCSZUG1c">talk</a> during Gopherfest, November 18, 2015. <a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/hugo/">hugo</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/hugo/">hugo</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Placeholder Text</title>
                <link>https://zhangshaopu.github.io/posts/placeholder-text/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/placeholder-text/</guid>
                <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
                
                
                
                    <description><![CDATA[<p>Lorem est tota propiore conpellat pectoribus de
pectora summo.</p>
<p>Redit teque digerit hominumque toris verebor lumina non cervice
subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc
caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis
lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.</p>
<ol>
<li>Exierant elisi ambit vivere dedere</li>
<li>Duce pollice</li>
<li>Eris modo</li>
<li>Spargitque ferrea quos palude</li>
</ol>
<p>Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus
silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria
tractus malis.</p>
<ol>
<li>Comas hunc haec pietate fetum procerum dixit</li>
<li>Post torum vates letum Tiresia</li>
<li>Flumen querellas</li>
<li>Arcanaque montibus omnes</li>
<li>Quidem et</li>
</ol>
<h1 id="vagus-elidunt">Vagus elidunt</h1>
<p><svg class="canon" xmlns="http://www.w3.org/2000/svg" overflow="visible" viewBox="0 0 496 373" height="373" width="496"><g fill="none"><path stroke="#000" stroke-width=".75" d="M.599 372.348L495.263 1.206M.312.633l494.95 370.853M.312 372.633L247.643.92M248.502.92l246.76 370.566M330.828 123.869V1.134M330.396 1.134L165.104 124.515"></path><path stroke="#ED1C24" stroke-width=".75" d="M275.73 41.616h166.224v249.05H275.73zM54.478 41.616h166.225v249.052H54.478z"></path><path stroke="#000" stroke-width=".75" d="M.479.375h495v372h-495zM247.979.875v372"></path><ellipse cx="498.729" cy="177.625" rx=".75" ry="1.25"></ellipse><ellipse cx="247.229" cy="377.375" rx=".75" ry="1.25"></ellipse></g></svg></p>
<p><a href="https://en.wikipedia.org/wiki/Canons_of_page_construction#Van_de_Graaf_canon">The Van de Graaf Canon</a></p>
<h2 id="mane-refeci-capiebant-unda-mulcebat">Mane refeci capiebant unda mulcebat</h2>
<p>Victa caducifer, malo vulnere contra
dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere
furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. <strong>Faces illo pepulere</strong> tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.</p>
<p>Iubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli
Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare
Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert
ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae
vulnus haerentia iuste et exercebat, sui et.</p>
<p>Eurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel <strong>mitis temploque</strong> vocatus, inque alis, <em>oculos nomen</em> non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem
Propoetides <strong>parte</strong>.</p>]]></description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/categories/hugo/">hugo</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://zhangshaopu.github.io/tags/hugo/">hugo</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Emoji Support</title>
                <link>https://zhangshaopu.github.io/posts/emoji-support/</link>
                <guid isPermaLink="true">https://zhangshaopu.github.io/posts/emoji-support/</guid>
                <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
                
                
                
                    <description><![CDATA[<p>Emoji can be enabled in a Hugo project in a number of ways.</p>
<p>The <a href="https://gohugo.io/functions/emojify/"><code>emojify</code></a> function can be called directly in templates or <a href="https://gohugo.io/templates/shortcode-templates/#inline-shortcodes">Inline Shortcodes</a>.</p>
<p>To enable emoji globally, set <code>enableEmoji</code> to <code>true</code> in your site’s <a href="https://gohugo.io/getting-started/configuration/">configuration</a> and then you can type emoji shorthand codes directly in content files; e.g.</p>
<p><span class="nowrap"><span class="emojify">🙈</span> <code>🙈</code></span>  <span class="nowrap"><span class="emojify">🙉</span> <code>🙉</code></span>  <span class="nowrap"><span class="emojify">🙊</span> <code>🙊</code></span></p>
<br>
<p>The <a href="http://www.emoji-cheat-sheet.com/">Emoji cheat sheet</a> is a useful reference for emoji shorthand codes.</p>
<hr>
<p><strong>N.B.</strong> The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">emoji</span> <span class="p">{</span>
<span class="k">font-family</span><span class="p">:</span> <span class="n">Apple</span> <span class="n">Color</span> <span class="n">Emoji</span><span class="p">,</span><span class="n">Segoe</span> <span class="n">UI</span> <span class="n">Emoji</span><span class="p">,</span><span class="n">NotoColorEmoji</span><span class="p">,</span><span class="n">Segoe</span> <span class="n">UI</span> <span class="n">Symbol</span><span class="p">,</span><span class="n">Android</span> <span class="n">Emoji</span><span class="p">,</span><span class="n">EmojiSymbols</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
                
                
                
                
                
                    
                        
                    
                        
                    
                
            </item>
        
    </channel>
</rss>